_target_: models.GFN

defaults:
  - components@state_encoder: StateEncoding

  - components@time_encoder: TimeEncoding

  - components@forward_model: JointPolicy

  - components@backward_model: JointPolicy

  - components@flow_model: FlowModel

  - components@langevin_scaler: LangevinScaling

  - prior_energy: Dirac

forward_model:
  s_dim: ${energy.dim}

backward_model:
  s_dim: ${energy.dim}

state_encoder:
  s_dim: ${energy.dim}

# If yout want to scale gradient of energy dimension-wise,
# you can set out_dim to ${energy.dim}.
langevin_scaler:
  out_dim: ${energy.dim}

trajectory_length: 100

t_scale: 1.0
learned_variance: false
log_var_range: 4.0

pb_scale_range: 0.1

clipping: true
lgv_clip: 1e2
gfn_clip: 1e4

optimizer_cfg:
  lr_policy: 1e-3
  lr_flow: 1e-1
  lr_back: 1e-3
  weight_decay: 1e-7
  use_weight_decay: false